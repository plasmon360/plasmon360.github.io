<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Bala Juluri's Blog - Plasmonics, Researc</title><link href="plasmon360.github.io/" rel="alternate"></link><link href="plasmon360.github.io/feeds/plasmonics-researc.atom.xml" rel="self"></link><id>plasmon360.github.io/</id><updated>2013-07-20T18:50:00-07:00</updated><subtitle>Ramblings</subtitle><entry><title>Installing Meep 1.2 on ubuntu</title><link href="plasmon360.github.io/installing-meep-1-2-on-ubuntu.html" rel="alternate"></link><published>2013-07-20T18:50:00-07:00</published><updated>2013-07-20T18:50:00-07:00</updated><author><name>juluribk</name></author><id>tag:None,2013-07-20:plasmon360.github.io/installing-meep-1-2-on-ubuntu.html</id><summary type="html">&lt;p&gt;Pre-compiled Meep binaries for meep1.1 exist for Ubuntu distribution. This makes it very easy to install meep on ubuntu using “apt-get install” command or from the ubuntu software center. However recently, Meep developers have release meep1.2 which has more functions compared to meep1.1. I have recently installed …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Pre-compiled Meep binaries for meep1.1 exist for Ubuntu distribution. This makes it very easy to install meep on ubuntu using “apt-get install” command or from the ubuntu software center. However recently, Meep developers have release meep1.2 which has more functions compared to meep1.1. I have recently installed meep1.2 from source on ubuntu 12.04 using the instructions shown at &lt;a href="http://ab-initio.mit.edu/wiki/index.php/Meep_Installation"&gt;http://ab-initio.mit.edu/wiki/index.php/Meep_Installation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I have root access to my computer, so I installed all the libraries/bin files in their default location (i.e, libraries go in /usr/local/lib, programs in /usr/local/bin, etc)&lt;/p&gt;
&lt;p&gt;These are the steps I followed:&lt;/p&gt;
&lt;p&gt;1) To avoid any complications, I uninstalled meep1.1 and meep-openmpi, which were installed earlier on my ubuntu system from the software center.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2) Setting the environmental variables:&lt;/strong&gt;&lt;br&gt;
export LDFLAGS="-L/usr/local/lib"&lt;br&gt;
export CPPFLAGS="-I/usr/local/include"&lt;br&gt;
export LD_LIBRARY_PATH="/usr/local/lib:\$LD_LIBRARY_PATH"&lt;/p&gt;
&lt;p&gt;3) I installed G77, gfortran, f77, g++ and make packages on my system. I installed g++ and make using “sudo apt-get install build-essential”. Some of the packages might have been pre-installed.&lt;/p&gt;
&lt;p&gt;4)&lt;strong&gt;Installing blas and lapack&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;As said at &lt;a href="http://ab-initio.mit.edu/wiki/index.php/Meep_Installation"&gt;http://ab-initio.mit.edu/wiki/index.php/Meep_Installation&lt;/a&gt;, Openblas at &lt;a href="http://xianyi.github.io/OpenBLAS/"&gt;http://xianyi.github.io/OpenBLAS/&lt;/a&gt; should install both blas and lapack libraries. I downloaded the tar file from the website and extracted it. Then I cd’ed into that folder and issued a “make” command. I had some problems with “make” command as it was using f77 for compiling and was throwing an error. After some search, I found that “make FC=gfortran NO_AFFINITY=1 USE_OPENMP=1” solves this problem. This resulted in “libopenblas.a” in /usr/local/lib folder.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5) Installing Harminv&lt;/strong&gt;&lt;br&gt;
I downloaded the tar file from &lt;a href="http://ab-initio.mit.edu/wiki/index.php/Harminv"&gt;http://ab-initio.mit.edu/wiki/index.php/Harminv&lt;/a&gt;. Extracted the tar file and cd’ed into it. I installed the harminv using ./configure, make and sudo make commands as said at " title="http://ab-initio.mit.edu/wiki/index.php/Harminv"&amp;gt;http://ab-initio.mit.edu/wiki/index.php/Harminv_installation This resulted in “libharminv.a”. Harminv required blas and lapack installed.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6) Installing Guile&lt;/strong&gt;&lt;br&gt;
This was simple. I used the command “sudo apt-get install guile-2.0” and “sudo apt-get install guile-2.0-dev”&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;7) Installing libctl&lt;/strong&gt;&lt;br&gt;
Downloaded the tar file, extracted it, cd’ed into it. I followed ./configure, make and sudo make commands as told on at &lt;a href="http://ab-initio.mit.edu/wiki/index.php/Libctl"&gt;http://ab-initio.mit.edu/wiki/index.php/Libctl&lt;/a&gt; and after the process I saw libctl.a in the /usr/local/lib folder.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;8) Installing hdf5&lt;/strong&gt;&lt;br&gt;
I downloaded the hdf5 tar file from &lt;a href="http://www.hdfgroup.org/ftp/HDF5/releases/hdf5-1.8.8/src"&gt;hdf5-1.8.8 source page&lt;/a&gt;. I used 1.8.8 version (no special reason for this version). Extracted the tar file. Cd’ed into the folder and use “./configure, make, make install” . It took a while for this to complete. At the end, I saw all the libraries, executables and include files were placed in “hdf5” sub-folder. I saw “bin”,”include”,”share”,”lib” inside this sub-folder. I figured they should be placed at default locations so I issued following commands inside the hdf5-1.8.6 folder&lt;br&gt;
sudo cp hdf5/bin/* /usr/local/bin/&lt;br&gt;
sudo cp hdf5/lib/* /usr/local/lib/&lt;br&gt;
sudo cp hdf5/include/* /usr/local/include/&lt;br&gt;
sudo cp hdf5/share/* /usr/local/share/&lt;br&gt;
By the end of the process, I saw libhdf5.a in the /usr/local/lib. I did not enable MPI parallel I/O support in hdf5.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;9) Installing meep&lt;/strong&gt;&lt;br&gt;
I downloaded the tar file from &lt;a href="http://ab-initio.mit.edu/wiki/index.php/Meep_download"&gt;meep downloaded page&lt;/a&gt; and then extracted it. Then I cd’ed into that folder and issued “./configure” command. I had no errors as guile, libctl, harminv, hdf5 libraries were all available. See my &lt;a href="http://juluribk.com/wp-content/uploads/2013/07/configure_log_file.txt"&gt;configure_log_file&lt;/a&gt;. Then “make” and then “sudo make install” commands were issued. I did not enabled parallel version for this post. This resulted in meep executable in “/usr/local/bin” folder. I renamed it to meep12 (sudo mv /usr/local/bin/meep meep12) so that I know that it is running meep1.2 and not to confuse with meep1.1.  Now I opened a new terminal and issued “/usr/local/bin/meep12” to run meep1.2. you should see:&lt;br&gt;
“GNU Guile 2.0.5-deb+1-1&lt;br&gt;
Copyright (C) 1995-2012 Free Software Foundation, Inc.&lt;br&gt;
Guile comes with ABSOLUTELY NO WARRANTY; for details type `,show w'.&lt;br&gt;
This program is free software, and you are welcome to redistribute it&lt;br&gt;
under certain conditions; type `,show c' for details.&lt;br&gt;
Enter `,help' for help.&lt;br&gt;
”&lt;/p&gt;
&lt;p&gt;In future, I will post some meep examples that use the added functionalities of meep1.2. Stay tuned!&lt;/p&gt;</content><category term="Plasmonics, Researc"></category><category term="electromagnetism"></category><category term="FDTD"></category><category term="MEEP"></category><category term="Plasmonics"></category></entry><entry><title>Plasmonic materials in MEEP</title><link href="plasmon360.github.io/plasmonic-materials-in-meep.html" rel="alternate"></link><published>2011-04-27T00:39:00-07:00</published><updated>2011-04-27T00:39:00-07:00</updated><author><name>juluribk</name></author><id>tag:None,2011-04-27:plasmon360.github.io/plasmonic-materials-in-meep.html</id><summary type="html">&lt;p&gt;[latexpage]&lt;/p&gt;
&lt;p&gt;The aim of this post is to share my experience in incorporating dielectric function of metals such as gold and silver into MEEP (a free finite difference time domain package) code. The incorporation is not an easy task and can be daunting for the first time user.&lt;/p&gt;
&lt;p&gt;Metals such …&lt;/p&gt;</summary><content type="html">&lt;p&gt;[latexpage]&lt;/p&gt;
&lt;p&gt;The aim of this post is to share my experience in incorporating dielectric function of metals such as gold and silver into MEEP (a free finite difference time domain package) code. The incorporation is not an easy task and can be daunting for the first time user.&lt;/p&gt;
&lt;p&gt;Metals such as gold and silver have both Drude and Lorentz components for the dielectric function. There are many forms of Lorentz-Drude expressions in literature with slight notation differences.&lt;/p&gt;
&lt;p&gt;I prefer the Lorentz-Drude expression mentioned in &lt;a href="http://www.opticsinfobase.org/abstract.cfm?URI=ao-37-22-5271"&gt;Rakic et al., Optical properties of metallic films for vertical-cavity optoelectronic devices, Applied Optics (1998)&lt;/a&gt; and is given by:&lt;/p&gt;
&lt;p&gt;\$\epsilon(\omega)=1-\frac{f_1\omega_p'\^2}{(\omega\^2+i\Gamma_1'\omega)}+\sum_{j=2}\^{n}\frac{f_j\omega_p'\^2}{(\omega_{o,j}'\^2-\omega\^2-i\Gamma_j'\omega)}\$.&lt;/p&gt;
&lt;p&gt;I took it as reference as they also give the parameters for metals such as Ag and Au and these models fit decently well to experimental data over a larger frequency range (0.1 eV to 6 eV).&lt;/p&gt;
&lt;p&gt;For Silver, the parameters are :&lt;/p&gt;
&lt;p&gt;\$\omega_p\$ = 9.01;% Plasma frequency in eV&lt;/p&gt;
&lt;p&gt;f = [0.845 0.065 0.124 0.011 0.840 5.646];% Oscillators' strengths&lt;/p&gt;
&lt;p&gt;\$\Gamma\$ = [0.048 3.886 0.452 0.065 0.916 2.419];% Damping frequency of each oscillator in eV&lt;/p&gt;
&lt;p&gt;\$\omega_o\$ = [0.000 0.816 4.481 8.185 9.083 20.29];% Resonant frequency of each oscillator in eV&lt;/p&gt;
&lt;p&gt;For Gold, the parameters are :&lt;/p&gt;
&lt;p&gt;\$\omega_p\$ = 9.03;% Plasma frequency in eV&lt;/p&gt;
&lt;p&gt;f = [0.760 0.024 0.010 0.071 0.601 4.384];% Oscillators' strengths&lt;/p&gt;
&lt;p&gt;\$\Gamma\$ = [0.053 0.241 0.345 0.870 2.494 2.214];% Damping frequency of each oscillator in eV&lt;/p&gt;
&lt;p&gt;\$\omega_o\$ = [0.000 0.415 0.830 2.969 4.304 13.32];% Resonant frequency of each oscillator in eV&lt;/p&gt;
&lt;p&gt;To convert these parameters usable for MEEP codes, one needs to do the following:&lt;/p&gt;
&lt;p&gt;1) Normalization:&lt;/p&gt;
&lt;p&gt;\$\omega_p'=\omega_p \times \textrm{norm}\$,&lt;/p&gt;
&lt;p&gt;\$\Gamma'=\Gamma \times \textrm{norm}\$,&lt;/p&gt;
&lt;p&gt;\$\omega_o'=\omega_o \times \textrm{norm}\$,&lt;/p&gt;
&lt;p&gt;where \$\textrm{norm}=\frac{ev2w}{\frac{2\pi c}{a}}\$, \$ev2w=\frac{2\pi}{4.135666e-15}\$ .&lt;/p&gt;
&lt;p&gt;Essentially, we are converting the units of \$\omega_p\$,\$\Gamma\$ and \$\omega_o\$ from eV to angular frequency, which is done by multiplying them with \$ev2w\$. Further, they need to be normalized to MEEP units, divide by \$\frac{2\pi c}{a}\$, where \$a\$ is the length unit in meters used in your MEEP code and obviously c is 299792458 m/s.&lt;/p&gt;
&lt;p&gt;2) Casting Lorentz-Drude model to MEEP's model&lt;/p&gt;
&lt;p&gt;Current version of MEEP (1.1.1), supports dispersive materials through Lorentz model and is given by:&lt;/p&gt;
&lt;p&gt;\$ \epsilon(\omega)=\epsilon_{\infty}+\sum_{j=1}\^{n}\frac{\sigma_{L,j}\omega_{L,j}\^2} {(\omega_{L,j}\^2-\omega\^2-i\Gamma_{L,j}\omega)}\$.&lt;/p&gt;
&lt;p&gt;The normalized parameters, \$\omega_p'\$,\$\Gamma'\$ and \$\omega_o'\$ from step 1, need to be cast into the MEEP's dispersive materials model by the following modifications:&lt;/p&gt;
&lt;p&gt;1) \$\omega_{L,1}=1e\^{-20}\$ (Any small number should be fine.)&lt;/p&gt;
&lt;p&gt;2) \$\omega_{L,j&amp;gt;1}=\omega_{o,j&amp;gt;1}'\$&lt;/p&gt;
&lt;p&gt;3) \$\sigma_{L,j}=\frac{f_j\omega_p'\^2}{\omega_{L,j}\^2}\$&lt;/p&gt;
&lt;p&gt;4) \$\epsilon_{\infty}=1\$&lt;/p&gt;
&lt;p&gt;5) \$\Gamma_{L,j}=\Gamma_j'\$&lt;/p&gt;
&lt;p&gt;Here is scheme code snippet for silver with a=100e-9m (100 nm) after normalization and casting them into MEEP's material model.&lt;/p&gt;
&lt;p&gt;[cc lang="scheme"]&lt;br&gt;
(define myAg (make dielectric (epsilon 1)&lt;br&gt;
(polarizations&lt;br&gt;
(make polarizability&lt;br&gt;
(omega 1e-20) (gamma 0.0038715) (sigma 4.4625e+39))&lt;br&gt;
(make polarizability&lt;br&gt;
(omega 0.065815) (gamma 0.31343) (sigma 7.9247))&lt;br&gt;
(make polarizability&lt;br&gt;
(omega 0.36142) (gamma 0.036456) (sigma 0.50133))&lt;br&gt;
(make polarizability&lt;br&gt;
(omega 0.66017) (gamma 0.0052426) (sigma 0.013329))&lt;br&gt;
(make polarizability&lt;br&gt;
(omega 0.73259) (gamma 0.07388) (sigma 0.82655))&lt;br&gt;
(make polarizability&lt;br&gt;
(omega 1.6365) (gamma 0.19511) (sigma 1.1133))&lt;br&gt;
)))&lt;/p&gt;
&lt;p&gt;[/cc]&lt;/p&gt;
&lt;p&gt;The first polarizability is the Drude component and the rest 5 polarzabilities represent the Lorentz components. I have used this snippet in a MEEP code that calculates the reflection from a thin film of silver (to be consistent, all my units in this MEEP code are also normalized to 100 nm). Later I compared the reflection spectra with an &lt;a href="http://en.wikipedia.org/wiki/Fresnel_equations"&gt;analytical solution&lt;/a&gt;. These results are shown below. The MEEP calculation results match very well the analytical solutions. One can also clearly see the Ag interband effects in UV regime. The results also match with an other &lt;a href="http://upload.wikimedia.org/wikipedia/commons/9/9d/Image-Metal-reflectance.png"&gt;reference&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If anyone needs the codes that generate the scheme snippet for material polarization and calculation of reflectivity of thin metal films, please shoot me an email.&lt;/p&gt;
&lt;p&gt;[caption id="attachment_795" align="aligncenter" width="600"]&lt;a href="http://juluribk.com/wp-content/uploads/2011/04/bitmap.png"&gt;&lt;img alt="" class="size-full wp-image-795" height="450" src="http://juluribk.com/wp-content/uploads/2011/04/bitmap.png" title="Reflectivity comparision between MEEP and analytical model for Silver" width="600"&gt;&lt;/a&gt; Reflectivity of Ag thin film (MEEP vs. analytical model)[/caption]&lt;/p&gt;
&lt;p&gt;[You can find my project file &lt;a href="http://juluribk.com/wp-content/uploads/2011/04/reflection_meep_material_generator.zip"&gt;here&lt;/a&gt;. Please read the readme.txt for further instructions.]{style="text-decoration: underline;"}&lt;/p&gt;
&lt;p&gt;[UPDATE:]{style="color: #ff0000;"} Aaron Webster used this code for a 1 × 1 × 1 pixel region and epilion was exported with the command meep-fields-analytic-chi1. He showed that the dielectric function seen by meep through using my snippet matches with the experimental dielectric function. You can find his report &lt;a href="http://falsecolour.com/aw/meep_metals/meep-metals.pdf"&gt;here&lt;/a&gt;. Thank you Aaron.&lt;/p&gt;
&lt;p&gt;Majid has written a python code to do the operation described above. Please find it &lt;a href="http://msdresearch.blogspot.com/2012/02/understanding-meeps-dispersive-media.html"&gt;here&lt;/a&gt;&lt;/p&gt;</content><category term="Plasmonics, Researc"></category><category term="electromagnetism"></category><category term="FDTD"></category><category term="Free Software"></category><category term="Matlab"></category><category term="MEEP"></category><category term="octave"></category><category term="photonics"></category><category term="Plasmonics"></category><category term="SERS"></category></entry></feed>